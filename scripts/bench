#!/bin/bash

BENCHMARKS="reverse tak rfib exp3_8 tree_insert tree_insert_32"
DEFAULT_CONFIGS="refcnt-opt gc-opt"

function usage {
  cat >&2 << EOF
Executes one or more benchmark programs with one or more configurations.

USAGE
    bench [-M|s] [-c config-spec] [bench-name ...]

        -c config-spec
            Run the specified configurations.  ``config-spec`` is a
            space-separated list of configurations.  May be supplied multiple
            times.  Defaults to "$DEFAULT_CONFIGS".

        -h
            Display this help message.

        -l
            Output a long report of the timing results.

        -M
            Do not remake the benchmarks (run only).

        -p
            Passes the -p option to scripts/make-benchmarks.

        -q
            Work silently.

        bench-name
            Specifies the benchmarks to run.  Defaults to "$BENCHMARKS".
            
EOF
  exit 1;
}

CONFIGS=""
SHORT_FLAG="-s"
NO_MAKE=0
QUIET=0
P_OPT=""

while getopts "c:hlMpq" OPTION
do
  case $OPTION in
    c)
      CONFIGS="$CONFIGS $OPTARG"
      ;;
    h)
      usage
      ;;
    l)
      SHORT_FLAG=""
      ;;
    M)
      NO_MAKE=1
      ;;
    p)
      P_OPT="-p"
      ;;
    q)
      QUIET=1
      ;;
  esac
done

shift $(($OPTIND - 1))

# Set the user's benchmarks, if supplied.
if [ "$#" != "0" ]; then
  BENCHMARKS=$@
fi

# Set the default configuration, unless the user supplied some.
if [ -z "$CONFIGS" ]; then
  CONFIGS=$DEFAULT_CONFIGS;
fi

ROOT=`(cd "\`dirname \"$0\"\`" > /dev/null ; cd ..; pwd)`
cd $ROOT

if [[ $QUIET == 1 ]]; then
  QUIET_OPTION="-q"
else
  QUIET_OPTION=""
fi


# Build.
if [[ $NO_MAKE == 0 ]]; then
  for CONFIG in $CONFIGS
  do
    ./scripts/make-benchmarks $P_OPT -c $CONFIG $QUIET_OPTION $BENCHMARKS
  done

  if [[ $QUIET == 0 ]]; then
    echo
    echo
  fi
fi


# Run.
echo "Running on `hostname`."
for CONFIG in $CONFIGS
do
  echo "------ Config $CONFIG ------"
  ./scripts/install-benchmarks -c $CONFIG -q $BENCHMARKS
  ./scripts/run-benchmarks $SHORT_FLAG $BENCHMARKS 2>&1
done
